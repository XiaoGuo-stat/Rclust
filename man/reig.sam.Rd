% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reig.sam.R
\name{reig.sam}
\alias{reig.sam}
\title{Compute randomized eigenvalue decomposition of the adjacency matrix of undirected networks using random sampling}
\usage{
reig.sam(A, P, use_lower = TRUE, k, tol = 1e-05, abs = FALSE, ...)
}
\arguments{
\item{A}{An input sparse and binary data matrix of type "dgCMatrix". \code{A} is not necessarily a symmetric matrix, see the parameter \code{use_lower}.}

\item{P}{The sampling probability. Should be between 0 and 1.}

\item{use_lower}{If \code{TRUE/FALSE}, only the lower/upper triangular part of \code{A} is used for sampling and the following eigendecomposition steps.}

\item{k}{Number of eigen values requested.}

\item{tol}{Precision parameter of the iterative algorithm. Default is 1e-5.}

\item{abs}{A logical variable indicating whether the \code{k} eigen values should be largest in absolute value.
If \code{FALSE}, then \code{\link[RSpectra]{eigs_sym}}) is used as the iterative algorithm. If \code{TRUE}, then
 \code{\link[RSpectra]{svds}}) is used as the iterative algorithm.Default is \code{FALSE}.}

\item{...}{Additional arguments of function \code{\link[RSpectra]{svds}} or \code{\link[RSpectra]{eigs_sym}}.}
}
\value{
\item{vectors}{The randomized \code{k} eigen vectors.}
        \item{values}{The \code{k} eigen values.}
        \item{sparA}{The sparsified data matrix obtained via \code{rsample_sym(A,P)}/P.}
}
\description{
Compute the randomized eigenvalue decomposition of the adjacency matrix (0-1 coded) by random sampling. The randomized
eigen vectors and eigen values are computed. Can deal with very large
data matrix.
}
\details{
This function computes the randomized eigenvalue decomposition of a data matrix (0-1 coded) using the random
sampling scheme. The data matrix \code{A} is first sampled to obtain a sparsified matrix.
An iterative algorithm (\code{\link[RSpectra]{svds}} or \code{\link[RSpectra]{eigs_sym}}) for computing the leading eigen vectors is then performed on the
sparsified matrix to obtain the randomized eigen vectors and eigen values.
}
\examples{

n <- 100
k <- 2
clustertrue <- rep(1:k, each = n/k)
A <- matrix(0, n, n)
for(i in 1:(n-1)) {
    for(j in (i+1):n) {
        A[i, j] <- ifelse(clustertrue[i] == clustertrue[j], rbinom(1, 1, 0.2), rbinom(1, 1, 0.1))
        A[j, i] <- A[i, j]
    }
}
diag(A) <- 0
A <- as(A, "dgCMatrix")
reig.sam(A, P = 0.7, use_lower = TRUE, k = k)

}
\seealso{
\code{\link[Rclust]{rsample_sym}}, \code{\link[RSpectra]{svds}}, \code{\link[RSpectra]{eigs_sym}}.
}
